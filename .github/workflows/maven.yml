# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
on:
  push:
  pull_request:
    branches:
      - main
jobs:
  test:
    name: Unit Tests & Validate Packer
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set Up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Cache Maven Packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Run Tests with Maven
      run: mvn -B test --file pom.xml
    - name: Validate Packer Template
      uses: hashicorp/packer-github-actions@master
      with:
        command: validate
        arguments: -syntax-only
        target: ./src/main/java/edu/neu/coe/csye6225/webapp/ami/ami.json
  build:
    name: Build Artifact
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Set Up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/webservice-0.0.1-SNAPSHOT.jar
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: build
      - name: Display structure of downloaded files
        run: ls -R
      - name: Upload JAR to S3
        uses: medlypharmacy/s3-artifacts-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_s3_bucket_name: ${{ secrets.AWS_S3_BUCKET_NAME }}
          source_path: './build'
          destination_path: "/build"
          exclude_repo_from_destination_path: true
          resource_type: "DIRECTORY"
  create-ami:
    name: Create AMI
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Build AMI with Packer
        run: echo 'build ami with packer'
